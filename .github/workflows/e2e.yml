name: E2E

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/e2e.yml
      - examples/cosmos-sdk/transfer/**
      - atomkraft/**
      - template/**
      - tests/**
    branches:
      - staging
      - trying

jobs:
  e2e:
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Set up OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: 4.13.x
      - name: Install MDX
        run: opam install mdx
      - name: Setup Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"
      - name: Run tests
        run: |
          source .venv/bin/activate
          cd examples/cosmos-sdk/transfer
          eval $(opam env)
          ocaml-mdx test -v transfer.md
          [ ! -f transfer.md.corrected ] || (cat transfer.md.corrected && exit 1)
