name: Python

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/python.yml
      - atomkraft/**
      - template/**
      - tests/**
      - pyproject.toml
      - poetry.lock

jobs:
  linting:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
      - name: Install dependencies
        run: python -m pip install pyflakes==2.4.0 black pylama[all]
      - name: Run linters
        run: |
          black . --check
          pylama -l pyflakes,pycodestyle,isort

  compile:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Compile python source code
        run: python -m compileall atomkraft tests

  test:
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.8", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install Apalache
        run: poetry run atomkraft model apalache get
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest
