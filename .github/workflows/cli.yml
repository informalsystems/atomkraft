name: CLI

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/cli.yml
      - atomkraft/**
      - template/**
      - tests/cli/*.md
      - pyproject.toml
      - poetry.lock

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  mdx:
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    env:
      COSMOS_SDK_TAG: v0.45.8
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Set up OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: 4.13.x
      - name: Install MDX
        run: opam install mdx
      - name: Load cached simd
        id: cached-simd
        uses: actions/cache@v3
        with:
          path: cosmos-sdk/build
          key: simd-${{ runner.os }}-${{ env.COSMOS_SDK_TAG }}
      - name: Setup Go 1.19
        if: steps.cached-simd.outputs.cache-hit != 'true'
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"
      - name: Compile Cosmos-SDK
        if: steps.cached-simd.outputs.cache-hit != 'true'
        run: |
          git clone --depth 1 --branch "$COSMOS_SDK_TAG" https://github.com/cosmos/cosmos-sdk
          cd cosmos-sdk
          make build
      - name: Put Cosmos-SDK binary in system path
        run: |
          echo "PATH=$PATH:$(pwd)/cosmos-sdk/build" >> $GITHUB_ENV
      - name: Setup Atomkraft and Apalache
        run: |
          source .venv/bin/activate
          poetry install --no-interaction
          python -m pip install pyflakes==2.4.0 black pylama[all]
          atomkraft model apalache get
      - name: Run tests
        run: |
          source .venv/bin/activate
          cd tests/cli
          eval $(opam env)
          sed -i.bu "s|/dev/|/${{ github.ref_name }}/|g" *md
          for f in `ls *md`; do ocaml-mdx test -v "${f}"; [ ! -f "${f}.corrected" ] || (diff -u "${f}" "${f}.corrected" && exit 1); done
